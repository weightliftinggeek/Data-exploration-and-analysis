#Set your working  directory in R using **setwd ()** function
#setwd ()
setwd(dir)
dat <- read.csv("Movie.csv", header=TRUE)
names(dat)
str(dat)
sum(is.na(dat)) #Total amount of NAs before replacing blank cells with NAs
#replace blank with NA
dat[dat == ""] <- NA
sum(is.na(dat)) #Total amount of NAs after replacing blank cells with NAs
colnames(dat)[colSums(is.na(dat)) > 0] #Names of columns that have NA
col_NA <- colSums(is.na(dat)) #The amount of NA each column has
col_NA
class(col_NA)
for (e in 1:ncol(dat)){
if (colSums(is.na(dat[,e, drop = FALSE]))>0) {print(paste("Column ", colnames(dat)[e], " has ", colSums(is.na(dat[,e, drop = FALSE])), " NA ", " which is only ","(", colSums(is.na(dat[,e, drop = FALSE])),"/3891)*100 = ", round((colSums(is.na(dat[,e, drop = FALSE]))/3891)*100, digits = 2), "% of the variable.", sep = ""))
}
}
a <-0
for (e in 1:nrow(dat)){
if (rowSums(is.na(dat[e,]))>0) {print(paste("observation", e, "has", rowSums(is.na(dat[e,])), "NA"))
a <- a + 1
}
}
print(paste(a,"out of 3891 obversations has NA", ". Which is only", round((a/3891)*100,digits = 2), "% of the data"))
dat.cleaned <- na.omit(dat)
any(is.na(dat.cleaned))
dim(dat.cleaned)
dat2 <- dat.cleaned
dat2$Profit <- dat2$Gross - dat2$Budget
head(dat2)
#Profit vs Imdb_score
ggplot(data = dat2, mapping = aes(y = Profit, x = Imdb_score)) + geom_point(color = 'darkblue', alpha=1/5)
dat_profit <- dat2[dat2$Profit >= -2e8,]
head(dat_profit)
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Imdb_score)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Movie_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5)+geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Aspect_ratio)) + geom_point(color = 'darkblue', alpha=1/5)+geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_2_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Year, y = Profit)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Content_rating)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Budget)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Facenumber_in_poster)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Cast_total_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Votes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Genre)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm") + theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Gross)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_1_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_3_facebook_likes)) + geom_point(color = 'darkblue', alpha = 1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Director_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Duration)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Reviews)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Color)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat_profit, mapping = aes(x = Profit, y = ..density..)) + geom_freqpoly(mapping = aes(colour = Color), binwidth = 500000)
#Select only numeric variables for correlation matrix
dat_num <- dat2 %>% select_if(is.numeric)
dat_cor<- cor(dat_num)
round(dat_cor, 2)
corrplot(dat_cor, method = "pie", type = "upper", tl.pos="l")
ggplot(data = dat2, mapping = aes(y = Cast_total_facebook_likes, x = Actor_1_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Movie_facebook_likes, y = Reviews)) + geom_point(color = 'darkblue',alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Votes, y = Reviews)) + geom_point(color = 'darkblue', alpha = 1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat2, mapping = aes(x = Votes, y = Gross)) + geom_point(color = 'darkblue', alpha = 1/10) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Actor_2_facebook_likes, y = Cast_total_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Budget, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Duration, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Aspect_ratio, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Facenumber_in_poster, y = Profit)) + geom_point(color = 'darkblue',alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Year, y = Votes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(y = Actor_1_facebook_likes, x = Budget)) + geom_point(color = 'darkblue', alpha=1/5)+geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Aspect_ratio, y= Imdb_score)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
dat <- read.csv("Titanic.csv", header=TRUE)
names(dat)
str(dat)
sum(is.na(dat)) #Total amount of NAs before replacing blank cells with NAs
#replace blank with NA
dat[dat == ""] <- NA
sum(is.na(dat)) #Total amount of NAs after replacing blank cells with NAs
summary(dat)
dat$Class <- factor(dat$Class)
dat$Sex <- factor(dat$Sex)
dat$Survived <- factor(dat$Survived)
dat$Age <- factor(dat$Age)
summary(dat)
library(arules)
library(arulesViz)
class(dat)
dat2 <- dat[,-1]
dat2 <- as(dat2, "transactions")
inspect(dat2[1:10])
survied_rules = apriori(dat2, parameter = list(minlen=2,supp=0.005,conf=0.8), appearance = list(default = "lhs", rhs ="Survived=Yes"))
inspect(survied_rules)
rules_lift <- sort (survied_rules, by="lift", decreasing=TRUE) # 'high-lift' rules.
inspect(rules_lift)
# Top 3 are as follow:
inspect(rules_lift[1:3])
plot(rules_lift[1:3], method ="graph")
survied_rules_class = apriori(dat2, parameter = list(minlen=2,supp=0.001,conf=0.3), appearance = list(lhs = c("Class=1st", "Class=2nd","Class=3rd" , "Age=Child"), rhs ="Survived=Yes"))
rules_lift_class <- sort (survied_rules_class, by="lift", decreasing=TRUE) # 'high-lift' rules.
inspect(rules_lift_class)
inspect(rules_lift_class[c(1,2,6)])
plot(rules_lift_class[c(1,2,6)], method ="graph")
#Set the support and confidence low to get more rules
survied_rules_explore = apriori(dat2, parameter = list(minlen=2,supp=0.06,conf=0.2), appearance = list(default="lhs", rhs ="Survived=Yes"))
inspect(survied_rules_explore)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(Hmisc)
library(PerformanceAnalytics)
library(corrplot)
library(tidyr)
library(tidyverse)
library(datasets)
library(scales)
#Get your current working directory in R using **getwd ()** function
#getwd()
dir=getwd()
#Set your working  directory in R using **setwd ()** function
#setwd ()
setwd(dir)
dat <- read.csv("Movie.csv", header=TRUE)
names(dat)
str(dat)
sum(is.na(dat)) #Total amount of NAs before replacing blank cells with NAs
#replace blank with NA
dat[dat == ""] <- NA
sum(is.na(dat)) #Total amount of NAs after replacing blank cells with NAs
colnames(dat)[colSums(is.na(dat)) > 0] #Names of columns that have NA
col_NA <- colSums(is.na(dat)) #The amount of NA each column has
col_NA
class(col_NA)
for (e in 1:ncol(dat)){
if (colSums(is.na(dat[,e, drop = FALSE]))>0) {print(paste("Column ", colnames(dat)[e], " has ", colSums(is.na(dat[,e, drop = FALSE])), " NA ", " which is only ","(", colSums(is.na(dat[,e, drop = FALSE])),"/3891)*100 = ", round((colSums(is.na(dat[,e, drop = FALSE]))/3891)*100, digits = 2), "% of the variable.", sep = ""))
}
}
a <-0
for (e in 1:nrow(dat)){
if (rowSums(is.na(dat[e,]))>0) {print(paste("observation", e, "has", rowSums(is.na(dat[e,])), "NA"))
a <- a + 1
}
}
print(paste(a,"out of 3891 obversations has NA", ". Which is only", round((a/3891)*100,digits = 2), "% of the data"))
dat.cleaned <- na.omit(dat)
any(is.na(dat.cleaned))
dim(dat.cleaned)
dat2 <- dat.cleaned
dat2$Profit <- dat2$Gross - dat2$Budget
head(dat2)
#Profit vs Imdb_score
ggplot(data = dat2, mapping = aes(y = Profit, x = Imdb_score)) + geom_point(color = 'darkblue', alpha=1/5)
dat_profit <- dat2[dat2$Profit >= -2e8,]
head(dat_profit)
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Imdb_score)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Movie_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5)+geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Aspect_ratio)) + geom_point(color = 'darkblue', alpha=1/5)+geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_2_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Year, y = Profit)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Content_rating)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Budget)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Facenumber_in_poster)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Cast_total_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Votes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Genre)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm") + theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Gross)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_1_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_3_facebook_likes)) + geom_point(color = 'darkblue', alpha = 1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Director_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Duration)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Reviews)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Color)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat_profit, mapping = aes(x = Profit, y = ..density..)) + geom_freqpoly(mapping = aes(colour = Color), binwidth = 500000)
#Select only numeric variables for correlation matrix
dat_num <- dat2 %>% select_if(is.numeric)
dat_cor<- cor(dat_num)
round(dat_cor, 2)
corrplot(dat_cor, method = "pie", type = "upper", tl.pos="l")
ggplot(data = dat2, mapping = aes(y = Cast_total_facebook_likes, x = Actor_1_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Movie_facebook_likes, y = Reviews)) + geom_point(color = 'darkblue',alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Votes, y = Reviews)) + geom_point(color = 'darkblue', alpha = 1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat2, mapping = aes(x = Votes, y = Gross)) + geom_point(color = 'darkblue', alpha = 1/10) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Actor_2_facebook_likes, y = Cast_total_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Budget, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Duration, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Aspect_ratio, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Facenumber_in_poster, y = Profit)) + geom_point(color = 'darkblue',alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Year, y = Votes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(y = Actor_1_facebook_likes, x = Budget)) + geom_point(color = 'darkblue', alpha=1/5)+geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Aspect_ratio, y= Imdb_score)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
dat <- read.csv("Titanic.csv", header=TRUE)
names(dat)
str(dat)
sum(is.na(dat)) #Total amount of NAs before replacing blank cells with NAs
#replace blank with NA
dat[dat == ""] <- NA
sum(is.na(dat)) #Total amount of NAs after replacing blank cells with NAs
summary(dat)
dat$Class <- factor(dat$Class)
dat$Sex <- factor(dat$Sex)
dat$Survived <- factor(dat$Survived)
dat$Age <- factor(dat$Age)
summary(dat)
library(arules)
library(arulesViz)
class(dat)
dat2 <- dat[,-1]
dat2 <- as(dat2, "transactions")
inspect(dat2[1:10])
survied_rules = apriori(dat2, parameter = list(minlen=2,supp=0.005,conf=0.8), appearance = list(default = "lhs", rhs ="Survived=Yes"))
inspect(survied_rules)
rules_lift <- sort (survied_rules, by="lift", decreasing=TRUE) # 'high-lift' rules.
inspect(rules_lift)
# Top 3 are as follow:
inspect(rules_lift[1:3])
plot(rules_lift[1:3], method ="graph")
survied_rules_class = apriori(dat2, parameter = list(minlen=2,supp=0.001,conf=0.3), appearance = list(lhs = c("Class=1st", "Class=2nd","Class=3rd" , "Age=Child"), rhs ="Survived=Yes"))
rules_lift_class <- sort (survied_rules_class, by="lift", decreasing=TRUE) # 'high-lift' rules.
inspect(rules_lift_class)
inspect(rules_lift_class[c(1,2,6)])
plot(rules_lift_class[c(1,2,6)], method ="graph")
#Set the support and confidence low to get more rules
survied_rules_explore = apriori(dat2, parameter = list(minlen=2,supp=0.06,conf=0.2), appearance = list(default="lhs", rhs ="Survived=Yes"))
inspect(survied_rules_explore)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(Hmisc)
library(PerformanceAnalytics)
library(corrplot)
library(tidyr)
library(tidyverse)
library(datasets)
library(scales)
#Get your current working directory in R using **getwd ()** function
#getwd()
dir=getwd()
#Set your working  directory in R using **setwd ()** function
#setwd ()
setwd(dir)
dat <- read.csv("Movie.csv", header=TRUE)
names(dat)
str(dat)
sum(is.na(dat)) #Total amount of NAs before replacing blank cells with NAs
#replace blank with NA
dat[dat == ""] <- NA
sum(is.na(dat)) #Total amount of NAs after replacing blank cells with NAs
colnames(dat)[colSums(is.na(dat)) > 0] #Names of columns that have NA
col_NA <- colSums(is.na(dat)) #The amount of NA each column has
col_NA
class(col_NA)
for (e in 1:ncol(dat)){
if (colSums(is.na(dat[,e, drop = FALSE]))>0) {print(paste("Column ", colnames(dat)[e], " has ", colSums(is.na(dat[,e, drop = FALSE])), " NA ", " which is only ","(", colSums(is.na(dat[,e, drop = FALSE])),"/3891)*100 = ", round((colSums(is.na(dat[,e, drop = FALSE]))/3891)*100, digits = 2), "% of the variable.", sep = ""))
}
}
a <-0
for (e in 1:nrow(dat)){
if (rowSums(is.na(dat[e,]))>0) {print(paste("observation", e, "has", rowSums(is.na(dat[e,])), "NA"))
a <- a + 1
}
}
print(paste(a,"out of 3891 obversations has NA", ". Which is only", round((a/3891)*100,digits = 2), "% of the data"))
dat.cleaned <- na.omit(dat)
any(is.na(dat.cleaned))
dim(dat.cleaned)
dat2 <- dat.cleaned
dat2$Profit <- dat2$Gross - dat2$Budget
head(dat2)
#Profit vs Imdb_score
ggplot(data = dat2, mapping = aes(y = Profit, x = Imdb_score)) + geom_point(color = 'darkblue', alpha=1/5)
dat_profit <- dat2[dat2$Profit >= -2e8,]
head(dat_profit)
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Imdb_score)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Movie_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5)+geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Aspect_ratio)) + geom_point(color = 'darkblue', alpha=1/5)+geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_2_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Year, y = Profit)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Content_rating)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Budget)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Facenumber_in_poster)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Cast_total_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Votes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Genre)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm") + theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Gross)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_1_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_3_facebook_likes)) + geom_point(color = 'darkblue', alpha = 1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Director_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Duration)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Reviews)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Color)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat_profit, mapping = aes(x = Profit, y = ..density..)) + geom_freqpoly(mapping = aes(colour = Color), binwidth = 500000)
#Select only numeric variables for correlation matrix
dat_num <- dat2 %>% select_if(is.numeric)
dat_cor<- cor(dat_num)
round(dat_cor, 2)
corrplot(dat_cor, method = "pie", type = "upper", tl.pos="l")
ggplot(data = dat2, mapping = aes(y = Cast_total_facebook_likes, x = Actor_1_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Movie_facebook_likes, y = Reviews)) + geom_point(color = 'darkblue',alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Votes, y = Reviews)) + geom_point(color = 'darkblue', alpha = 1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat2, mapping = aes(x = Votes, y = Gross)) + geom_point(color = 'darkblue', alpha = 1/10) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Actor_2_facebook_likes, y = Cast_total_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Budget, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Duration, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Aspect_ratio, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Facenumber_in_poster, y = Profit)) + geom_point(color = 'darkblue',alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Year, y = Votes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(y = Actor_1_facebook_likes, x = Budget)) + geom_point(color = 'darkblue', alpha=1/5)+geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Aspect_ratio, y= Imdb_score)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
dat <- read.csv("Titanic.csv", header=TRUE)
names(dat)
str(dat)
sum(is.na(dat)) #Total amount of NAs before replacing blank cells with NAs
#replace blank with NA
dat[dat == ""] <- NA
sum(is.na(dat)) #Total amount of NAs after replacing blank cells with NAs
summary(dat)
dat$Class <- factor(dat$Class)
dat$Sex <- factor(dat$Sex)
dat$Survived <- factor(dat$Survived)
dat$Age <- factor(dat$Age)
summary(dat)
library(arules)
library(arulesViz)
class(dat)
dat2 <- dat[,-1]
dat2 <- as(dat2, "transactions")
inspect(dat2[1:10])
survied_rules = apriori(dat2, parameter = list(minlen=2,supp=0.005,conf=0.8), appearance = list(default = "lhs", rhs ="Survived=Yes"))
inspect(survied_rules)
rules_lift <- sort (survied_rules, by="lift", decreasing=TRUE) # 'high-lift' rules.
inspect(rules_lift)
# Top 3 are as follow:
inspect(rules_lift[1:3])
plot(rules_lift[1:3], method ="graph")
survied_rules_class = apriori(dat2, parameter = list(minlen=2,supp=0.001,conf=0.3), appearance = list(lhs = c("Class=1st", "Class=2nd","Class=3rd" , "Age=Child"), rhs ="Survived=Yes"))
rules_lift_class <- sort (survied_rules_class, by="lift", decreasing=TRUE) # 'high-lift' rules.
inspect(rules_lift_class)
inspect(rules_lift_class[c(1,2,6)])
plot(rules_lift_class[c(1,2,6)], method ="graph")
#Set the support and confidence low to get more rules
survied_rules_explore = apriori(dat2, parameter = list(minlen=2,supp=0.06,conf=0.2), appearance = list(default="lhs", rhs ="Survived=Yes"))
inspect(survied_rules_explore)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(Hmisc)
library(PerformanceAnalytics)
library(corrplot)
library(tidyr)
library(tidyverse)
library(datasets)
library(scales)
#Get your current working directory in R using **getwd ()** function
#getwd()
dir=getwd()
#Set your working  directory in R using **setwd ()** function
#setwd ()
setwd(dir)
dat <- read.csv("Movie.csv", header=TRUE)
names(dat)
str(dat)
sum(is.na(dat)) #Total amount of NAs before replacing blank cells with NAs
#replace blank with NA
dat[dat == ""] <- NA
sum(is.na(dat)) #Total amount of NAs after replacing blank cells with NAs
colnames(dat)[colSums(is.na(dat)) > 0] #Names of columns that have NA
col_NA <- colSums(is.na(dat)) #The amount of NA each column has
col_NA
class(col_NA)
for (e in 1:ncol(dat)){
if (colSums(is.na(dat[,e, drop = FALSE]))>0) {print(paste("Column ", colnames(dat)[e], " has ", colSums(is.na(dat[,e, drop = FALSE])), " NA ", " which is only ","(", colSums(is.na(dat[,e, drop = FALSE])),"/3891)*100 = ", round((colSums(is.na(dat[,e, drop = FALSE]))/3891)*100, digits = 2), "% of the variable.", sep = ""))
}
}
a <-0
for (e in 1:nrow(dat)){
if (rowSums(is.na(dat[e,]))>0) {print(paste("observation", e, "has", rowSums(is.na(dat[e,])), "NA"))
a <- a + 1
}
}
print(paste(a,"out of 3891 obversations has NA", ". Which is only", round((a/3891)*100,digits = 2), "% of the data"))
dat.cleaned <- na.omit(dat)
any(is.na(dat.cleaned))
dim(dat.cleaned)
dat2 <- dat.cleaned
dat2$Profit <- dat2$Gross - dat2$Budget
head(dat2)
#Profit vs Imdb_score
ggplot(data = dat2, mapping = aes(y = Profit, x = Imdb_score)) + geom_point(color = 'darkblue', alpha=1/5)
dat_profit <- dat2[dat2$Profit >= -2e8,]
head(dat_profit)
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Imdb_score)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Movie_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5)+geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Aspect_ratio)) + geom_point(color = 'darkblue', alpha=1/5)+geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_2_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Year, y = Profit)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Content_rating)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Budget)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Facenumber_in_poster)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Cast_total_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Votes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Genre)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm") + theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Gross)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_1_facebook_likes)) + geom_point(color = 'darkblue', alpha =1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Actor_3_facebook_likes)) + geom_point(color = 'darkblue', alpha = 1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Director_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Duration)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Reviews)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(y = Profit, x = Color)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat_profit, mapping = aes(x = Profit, y = ..density..)) + geom_freqpoly(mapping = aes(colour = Color), binwidth = 500000)
#Select only numeric variables for correlation matrix
dat_num <- dat2 %>% select_if(is.numeric)
dat_cor<- cor(dat_num)
round(dat_cor, 2)
corrplot(dat_cor, method = "pie", type = "upper", tl.pos="l")
ggplot(data = dat2, mapping = aes(y = Cast_total_facebook_likes, x = Actor_1_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Movie_facebook_likes, y = Reviews)) + geom_point(color = 'darkblue',alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Votes, y = Reviews)) + geom_point(color = 'darkblue', alpha = 1/5) +geom_smooth(se=FALSE,
method = "lm",
formula = y~poly(x,1),
size = 1.5)
ggplot(data = dat2, mapping = aes(x = Votes, y = Gross)) + geom_point(color = 'darkblue', alpha = 1/10) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Actor_2_facebook_likes, y = Cast_total_facebook_likes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Budget, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Duration, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Aspect_ratio, y = Profit)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat_profit, mapping = aes(x = Facenumber_in_poster, y = Profit)) + geom_point(color = 'darkblue',alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Year, y = Votes)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(y = Actor_1_facebook_likes, x = Budget)) + geom_point(color = 'darkblue', alpha=1/5)+geom_smooth(method = "lm")
ggplot(data = dat2, mapping = aes(x = Aspect_ratio, y= Imdb_score)) + geom_point(color = 'darkblue', alpha=1/5) +geom_smooth(method = "lm")
dat <- read.csv("Titanic.csv", header=TRUE)
names(dat)
str(dat)
sum(is.na(dat)) #Total amount of NAs before replacing blank cells with NAs
#replace blank with NA
dat[dat == ""] <- NA
sum(is.na(dat)) #Total amount of NAs after replacing blank cells with NAs
summary(dat)
dat$Class <- factor(dat$Class)
dat$Sex <- factor(dat$Sex)
dat$Survived <- factor(dat$Survived)
dat$Age <- factor(dat$Age)
summary(dat)
library(arules)
library(arulesViz)
class(dat)
dat2 <- dat[,-1]
dat2 <- as(dat2, "transactions")
inspect(dat2[1:10])
survied_rules = apriori(dat2, parameter = list(minlen=2,supp=0.005,conf=0.8), appearance = list(default = "lhs", rhs ="Survived=Yes"))
inspect(survied_rules)
rules_lift <- sort (survied_rules, by="lift", decreasing=TRUE) # 'high-lift' rules.
inspect(rules_lift)
# Top 3 are as follow:
inspect(rules_lift[1:3])
plot(rules_lift[1:3], method ="graph")
survied_rules_class = apriori(dat2, parameter = list(minlen=2,supp=0.001,conf=0.3), appearance = list(lhs = c("Class=1st", "Class=2nd","Class=3rd" , "Age=Child"), rhs ="Survived=Yes"))
rules_lift_class <- sort (survied_rules_class, by="lift", decreasing=TRUE) # 'high-lift' rules.
inspect(rules_lift_class)
inspect(rules_lift_class[c(1,2,6)])
plot(rules_lift_class[c(1,2,6)], method ="graph")
#Set the support and confidence low to get more rules
survied_rules_explore = apriori(dat2, parameter = list(minlen=2,supp=0.06,conf=0.2), appearance = list(default="lhs", rhs ="Survived=Yes"))
inspect(survied_rules_explore)
knitr::opts_chunk$set(echo = TRUE)
a<- c(1,"a", FALSE)
typeof(a)
typeof('a')
x <- X
x <- c(2,X)
x< ("a", "b")
x<- ("a", "b")
x<- c("a","b")
as.logical(x)
x<- ("a","b")
a<- c(TRUE,TRUE, 1)
typeof('a')
typeof(a)
